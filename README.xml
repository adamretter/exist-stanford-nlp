<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbookxi.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1">
    <info>
        <title>Stanford CoreNLP Wrapper for eXist-db</title>
        <mediaobject>
            <imageobject>
                <imagedata fileref="images/exist-stanford-nlp.png"/>
            </imageobject>
        </mediaobject>
        <author>
            <personname>
                <firstname>Loren</firstname>
                <surname>Cahlander</surname>
            </personname>
            <address>
                <state>North Carolina</state>
                <country>Unites States of America</country></address>
            <email>loren.cahlander@easymetahub.com</email>
        </author>
    </info>
    <section>
        <title>Introduction</title>
        <para>This application is a wrapper around the Stanford CoreNLP pipeline. for
                <orgname>eXist-db</orgname> (the Open Source Native XML Database)</para>
        <section>
            <title>Why</title>
            <para>Loren was between projects and at an <orgname>eXist-db</orgname> weekly conference
                call it came to light that the previous impementations of Stanford NLP and Named
                Entity Recognition were not compatible with version 5.0 of eXist-db.  Loren took
                this project on while looking for the next project, so please see the contributions
                section at the end of this article.</para>
        </section>
    </section>
    <section>
        <title>Getting Started</title>
        <para/>
        <section>
            <title>Install eXist-db</title>
            <para>Go to <link xlink:href="http://exist-db.org"/> and download version 5.2 or
                later.</para>
        </section>
        <section>
            <title>Installing the Application</title>
            <para/>
        </section>
        <section>
            <title>Loading the Languages</title>
            <para>The application is installed without any of the language files OOTB.  The files
                need to be loaded after the installation, so there is an XQuery script that will
                load a language specific JAR file from an external webiste.  The JAR file is
                expanded and the files are store in a relative path in the database from the data
                collection within the application.</para>
            <section>
                <title>Properties</title>
                <para>The properties files within the JAR file are transformed to JSON documents
                    where the entries pointing to the data files that have been loaded into the
                    database are transformed to the URL to that resource.</para>
                <section>
                    <title>Defaults</title>
                    <para>The pipeline uses default properties that assume that the english jar file
                        is loaded in the classpath.  Since the english jar is loaded into the
                        database it is important to have a defaults JSON document that points to the
                        english files in the database.</para>
                </section>
            </section>
        </section>
    </section>
    <section>
        <title>User Interface</title>
        <para/>
        <section>
            <title>Named Entity Recognition</title>
            <para>This user interface allows the user to enter text in the textbox, select the
                language and then after it is submitted the resulting NER has a color coded view of
                the text that identities the named entities.</para>
        </section>
        <section>
            <title>NLP</title>
            <para/>
        </section>
    </section>
    <section>
        <title>API</title>
        <para/>
        <section>
            <title>RESTful API</title>
            <para/>
            <section>
                <title>Natural Language Processing</title>
                <para/>
            </section>
            <section>
                <title>Named Entity Recognition</title>
                <para/>
            </section>
        </section>
        <section>
            <title>XQuery Function Modules</title>
            <para/>
            <section>
                <title>Natural Language Processing</title>
                <para/>
                <programlisting language="xquery">xquery version "3.1";

import module namespace nlp="http://exist-db.org/xquery/stanford-nlp";

let $properties := json-doc("/db/apps/stanford-nlp/data/StanfordCoreNLP-german.json")

let $text := "Juliana kommt aus Paris. Das ist die Hauptstadt von Frankreich. " ||
             "In diesem Sommer macht sie einen Sprachkurs in Freiburg. Das ist " ||
              "eine Universitätsstadt im Süden von Deutschland."
   
return nlp:parse($text, $properties)</programlisting>
                <para>The properties JSON document for Chinese is:</para>
                <programlisting>{
    "ner.applyNumericClassifiers": "false",
    "depparse.language": "german",
    "ner.useSUTime": "false",
    "ner.applyFineGrained": "false",
    "tokenize.language": "de",
    "parse.model": "http://localhost:8080/exist/apps/stanford-nlp/data/edu/stanford/nlp/models/lexparser/germanFactored.ser.gz",
    "pos.model": "http://localhost:8080/exist/apps/stanford-nlp/data/edu/stanford/nlp/models/pos-tagger/german/german-hgc.tagger",
    "ner.model": "http://localhost:8080/exist/apps/stanford-nlp/data/edu/stanford/nlp/models/ner/german.conll.germeval2014.hgc_175m_600.crf.ser.gz",
    "annotators": [
        "tokenize",
        "ssplit",
        "pos",
        "ner",
        "parse"
    ],
    "depparse.model": "http://localhost:8080/exist/apps/stanford-nlp/data/edu/stanford/nlp/models/parser/nndep/UD_German.gz"
}</programlisting>
                <para>This returns an XML document of the parsed text. </para>
                <programlisting>&lt;StanfordNLP>
    &lt;sentences>
        &lt;sentence id="1">
            &lt;tokens>
                &lt;token id="1">
                    &lt;word>Juliana&lt;/word>
                    &lt;CharacterOffsetBegin>0&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>7&lt;/CharacterOffsetEnd>
                    &lt;POS>NE&lt;/POS>
                    &lt;NER>PERSON&lt;/NER>
                &lt;/token>
                &lt;token id="2">
                    &lt;word>kommt&lt;/word>
                    &lt;CharacterOffsetBegin>8&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>13&lt;/CharacterOffsetEnd>
                    &lt;POS>VVFIN&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="3">
                    &lt;word>aus&lt;/word>
                    &lt;CharacterOffsetBegin>14&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>17&lt;/CharacterOffsetEnd>
                    &lt;POS>APPR&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="4">
                    &lt;word>Paris&lt;/word>
                    &lt;CharacterOffsetBegin>18&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>23&lt;/CharacterOffsetEnd>
                    &lt;POS>NE&lt;/POS>
                    &lt;NER>LOCATION&lt;/NER>
                &lt;/token>
                &lt;token id="5">
                    &lt;word>.&lt;/word>
                    &lt;CharacterOffsetBegin>23&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>24&lt;/CharacterOffsetEnd>
                    &lt;POS>$.&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
            &lt;/tokens>
            &lt;parse>(ROOT
  (S (NE Juliana) (VVFIN kommt)
    (PP (APPR aus) (NE Paris))
    ($. .)))

&lt;/parse>
        &lt;/sentence>
        &lt;sentence id="2">
            &lt;tokens>
                &lt;token id="1">
                    &lt;word>Das&lt;/word>
                    &lt;CharacterOffsetBegin>25&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>28&lt;/CharacterOffsetEnd>
                    &lt;POS>PDS&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="2">
                    &lt;word>ist&lt;/word>
                    &lt;CharacterOffsetBegin>29&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>32&lt;/CharacterOffsetEnd>
                    &lt;POS>VAFIN&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="3">
                    &lt;word>die&lt;/word>
                    &lt;CharacterOffsetBegin>33&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>36&lt;/CharacterOffsetEnd>
                    &lt;POS>ART&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="4">
                    &lt;word>Hauptstadt&lt;/word>
                    &lt;CharacterOffsetBegin>37&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>47&lt;/CharacterOffsetEnd>
                    &lt;POS>NN&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="5">
                    &lt;word>von&lt;/word>
                    &lt;CharacterOffsetBegin>48&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>51&lt;/CharacterOffsetEnd>
                    &lt;POS>APPR&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="6">
                    &lt;word>Frankreich&lt;/word>
                    &lt;CharacterOffsetBegin>52&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>62&lt;/CharacterOffsetEnd>
                    &lt;POS>NE&lt;/POS>
                    &lt;NER>LOCATION&lt;/NER>
                &lt;/token>
                &lt;token id="7">
                    &lt;word>.&lt;/word>
                    &lt;CharacterOffsetBegin>62&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>63&lt;/CharacterOffsetEnd>
                    &lt;POS>$.&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
            &lt;/tokens>
            &lt;parse>(ROOT
  (S (PDS Das) (VAFIN ist)
    (NP (ART die) (NN Hauptstadt)
      (PP (APPR von) (NE Frankreich)))
    ($. .)))

&lt;/parse>
        &lt;/sentence>
        &lt;sentence id="3">
            &lt;tokens>
                &lt;token id="1">
                    &lt;word>In&lt;/word>
                    &lt;CharacterOffsetBegin>64&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>66&lt;/CharacterOffsetEnd>
                    &lt;POS>APPR&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="2">
                    &lt;word>diesem&lt;/word>
                    &lt;CharacterOffsetBegin>67&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>73&lt;/CharacterOffsetEnd>
                    &lt;POS>PDAT&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="3">
                    &lt;word>Sommer&lt;/word>
                    &lt;CharacterOffsetBegin>74&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>80&lt;/CharacterOffsetEnd>
                    &lt;POS>NN&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="4">
                    &lt;word>macht&lt;/word>
                    &lt;CharacterOffsetBegin>81&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>86&lt;/CharacterOffsetEnd>
                    &lt;POS>VVFIN&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="5">
                    &lt;word>sie&lt;/word>
                    &lt;CharacterOffsetBegin>87&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>90&lt;/CharacterOffsetEnd>
                    &lt;POS>PPER&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="6">
                    &lt;word>einen&lt;/word>
                    &lt;CharacterOffsetBegin>91&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>96&lt;/CharacterOffsetEnd>
                    &lt;POS>ART&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="7">
                    &lt;word>Sprachkurs&lt;/word>
                    &lt;CharacterOffsetBegin>97&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>107&lt;/CharacterOffsetEnd>
                    &lt;POS>NN&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="8">
                    &lt;word>in&lt;/word>
                    &lt;CharacterOffsetBegin>108&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>110&lt;/CharacterOffsetEnd>
                    &lt;POS>APPR&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="9">
                    &lt;word>Freiburg&lt;/word>
                    &lt;CharacterOffsetBegin>111&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>119&lt;/CharacterOffsetEnd>
                    &lt;POS>NE&lt;/POS>
                    &lt;NER>LOCATION&lt;/NER>
                &lt;/token>
                &lt;token id="10">
                    &lt;word>.&lt;/word>
                    &lt;CharacterOffsetBegin>119&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>120&lt;/CharacterOffsetEnd>
                    &lt;POS>$.&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
            &lt;/tokens>
            &lt;parse>(ROOT
  (S
    (PP (APPR In) (PDAT diesem) (NN Sommer))
    (VVFIN macht) (PPER sie)
    (NP (ART einen) (NN Sprachkurs)
      (PP (APPR in) (NE Freiburg)))
    ($. .)))

&lt;/parse>
        &lt;/sentence>
        &lt;sentence id="4">
            &lt;tokens>
                &lt;token id="1">
                    &lt;word>Das&lt;/word>
                    &lt;CharacterOffsetBegin>121&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>124&lt;/CharacterOffsetEnd>
                    &lt;POS>PDS&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="2">
                    &lt;word>ist&lt;/word>
                    &lt;CharacterOffsetBegin>125&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>128&lt;/CharacterOffsetEnd>
                    &lt;POS>VAFIN&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="3">
                    &lt;word>eine&lt;/word>
                    &lt;CharacterOffsetBegin>129&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>133&lt;/CharacterOffsetEnd>
                    &lt;POS>ART&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="4">
                    &lt;word>Universitätsstadt&lt;/word>
                    &lt;CharacterOffsetBegin>134&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>151&lt;/CharacterOffsetEnd>
                    &lt;POS>NN&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="5">
                    &lt;word>im&lt;/word>
                    &lt;CharacterOffsetBegin>152&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>154&lt;/CharacterOffsetEnd>
                    &lt;POS>APPRART&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="6">
                    &lt;word>Süden&lt;/word>
                    &lt;CharacterOffsetBegin>155&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>160&lt;/CharacterOffsetEnd>
                    &lt;POS>NN&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="7">
                    &lt;word>von&lt;/word>
                    &lt;CharacterOffsetBegin>161&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>164&lt;/CharacterOffsetEnd>
                    &lt;POS>APPR&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
                &lt;token id="8">
                    &lt;word>Deutschland&lt;/word>
                    &lt;CharacterOffsetBegin>165&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>176&lt;/CharacterOffsetEnd>
                    &lt;POS>NE&lt;/POS>
                    &lt;NER>LOCATION&lt;/NER>
                &lt;/token>
                &lt;token id="9">
                    &lt;word>.&lt;/word>
                    &lt;CharacterOffsetBegin>176&lt;/CharacterOffsetBegin>
                    &lt;CharacterOffsetEnd>177&lt;/CharacterOffsetEnd>
                    &lt;POS>$.&lt;/POS>
                    &lt;NER>O&lt;/NER>
                &lt;/token>
            &lt;/tokens>
            &lt;parse>(ROOT
  (S (PDS Das) (VAFIN ist)
    (NP (ART eine) (NN Universitätsstadt)
      (PP (APPRART im) (NN Süden)
        (PP (APPR von) (NE Deutschland))))
    ($. .)))

&lt;/parse>
        &lt;/sentence>
    &lt;/sentences>
&lt;/StanfordNLP></programlisting>
            </section>
            <section>
                <title>Named Entity Recognition</title>
                <para/>
                <programlisting>xquery version "3.1";

import module namespace ner = "http://exist-db.org/xquery/stanford-nlp/ner";

let $text := "Juliana kommt aus Paris. Das ist die Hauptstadt von Frankreich. " ||
             "In diesem Sommer macht sie einen Sprachkurs in Freiburg. Das ist " ||
              "eine Universitätsstadt im Süden von Deutschland."
   
return ner:query-text($text, "de")</programlisting>
                <para>With the results</para>
                <programlisting language="xml">&lt;ner>
    &lt;PERSON>Juliana&lt;/PERSON> kommt aus &lt;LOCATION>Paris&lt;/LOCATION>. 
Das ist die Hauptstadt von &lt;LOCATION>Frankreich&lt;/LOCATION>. 
In diesem Sommer macht sie einen Sprachkurs in &lt;LOCATION>Freiburg&lt;/LOCATION>. 
Das ist eine Universitätsstadt im Süden von &lt;LOCATION>Deutschland&lt;/LOCATION>.&lt;/ner></programlisting>
            </section>
        </section>
    </section>
    <section>
        <title>Future Developments</title>
        <para>Any requests for features should be submitted to <link
                xlink:href="https://github.com/lcahlander/exist-stanford-nlp/issues"/></para>
    </section>
    <section>
        <title>About the Author</title>
        <para/>
        <section>
            <title>Contributions</title>
            <para>Loren is an independent contractor, so his contributions to the Open Source
                community are on his own time. If you appreciate his contributions to the NoSQL and
                the Natural Language Processing communities, then please either contract him for a
                project or submit a contribution to his company PayPal at
                    <email>loren.cahlander@easymetahub.com</email>.</para>
        </section>
    </section>
</article>
